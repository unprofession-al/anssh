#!/usr/bin/zsh

LIST_HOSTS=false
INV=""

while getopts ":i:l" opt; do
  case $opt in
    i)
      INV=$OPTARG
      ;;
    l)
      LIST_HOSTS=true
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

INV_FILE=""

if [[ "$INV" != "" ]]; then
    INV=`echo $INV | sed 's/^ *//;s/ *$//'`
    if [[ -e $INV ]] && [[ -f $INV ]]; then
        INV_FILE=`echo $INV | sed 's/^ *//;s/ *$//'`
    else
        echo "Error: Inventory $INV does not exist."
        exit 1
    fi
fi

if [[ "$INV_FILE" = "" ]] && [[ -e ./ansible.cfg ]] && [[ -f ./ansible.cfg ]]; then
    POTENTIAL_INV_FILE=`awk -F "=" '/^inventory/ {gsub(/^[ \t]+|[ \t]+$/, "", $2); print $2}' ansible.cfg`
    if [[ -e $POTENTIAL_INV_FILE ]] && [[ -f $POTENTIAL_INV_FILE ]]; then
        INV_FILE=$POTENTIAL_INV_FILE
    else
        echo "Error: Inventory $INV from ansible.cfg does not exist."
        exit 1
    fi
fi

if [[ "$INV_FILE" = "" ]]; then
    echo "Error: No inventory to work with."
    exit 1
fi

if $LIST_HOSTS; then
    HOSTS=`awk '/children\]/{flag=0;next}/\[*\]/{flag=1}flag' $INV_FILE | awk -F" " '!/^(;|#|\[|[:space:]*$)/ {printf $1" "}'`
    echo $HOSTS
    exit 0
fi

shift $((OPTIND-1))

if [[ $# -gt 1 ]]; then
    echo "Error: Too many arguments, only one argument allowed"
    exit 0
elif [[ $# -lt 1 ]]; then
    echo "Error: Too little arguments, one argument requried"
    exit 0
fi

HOST=$@

SSH_ARGS=""

if [[ -e ./ansible.cfg ]] && [[ -f ./ansible.cfg ]]; then
    LINE=`grep "ssh_args" ./ansible.cfg`
    SSH_ARGS="${LINE#*=}"
fi

CMD="ssh $SSH_ARGS $HOST"
eval $CMD

if [[ $? -ne 0 ]]; then
    echo "Error: connection failed"
fi
